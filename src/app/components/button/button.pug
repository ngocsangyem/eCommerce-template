mixin button(data)
	- data = data || {}
	- data.class = data.class || '' // custom class
	- data.content = data.content || 'Some content here'
	- data.color = data.color || 'primary'
	- data.arrow = data.arrow || { visible: false, direction: 'left' }
	- data.icon = data.icon || { right: '<svg viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M16.3333 27.9668L23.1833 21.1168C23.4937 20.8045 23.6679 20.3821 23.6679 19.9418C23.6679 19.5015 23.4937 19.079 23.1833 18.7668L16.5166 12.1001" stroke="#151515" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="bevel"/> </svg>', left: '<svg viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg"> <path d="M23.6664 12.0332L16.8164 18.8832C16.506 19.1955 16.3318 19.6179 16.3318 20.0582C16.3318 20.4985 16.506 20.9209 16.8164 21.2332L23.4831 27.8999" stroke="#151515" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="bevel"/> </svg>' }
	- data.outline = data.outline || false
	- data.size = data.size || 'large'

	- const outlineClass = data.outline ? `btn-outline--${data.color}` : `btn--${data.color}`
	- const btnSizeClass = `btn--${data.size}`
	- let arrowClass
	if data.arrow.visible
		- arrowClass = 'btn-arrow'
		if data.arrow.direction === 'right'
			- arrowClass = `${arrowClass} btn-arrow--right`
		else
			- arrowClass = `${arrowClass} btn-arrow--left`
	else
		- arrowClass = ''
	- const classes = [outlineClass, arrowClass, btnSizeClass]
	button.e-btn.btn(class=classes class=data.class aria-label=`${data.content} button`)&attributes(attributes)
		if data.arrow.visible && data.arrow.direction === 'left'
			!=data.icon.left
		!= data.content
		if data.arrow.visible && data.arrow.direction === 'right'
			!= data.icon.right

